Grammar

    0 $accept: program $end

    1 program: exp_em

    2 exp_em: exp
    3       | %empty

    4 exp: INT
    5    | STRING
    6    | lvalue
    7    | NIL
    8    | LPAREN sequencing RPAREN
    9    | exp PLUS exp
   10    | exp MINUS exp
   11    | exp TIMES exp
   12    | exp DIVIDE exp
   13    | exp EQ exp
   14    | exp NEQ exp
   15    | exp LT exp
   16    | exp LE exp
   17    | exp GT exp
   18    | exp GE exp
   19    | exp AND exp
   20    | exp OR exp
   21    | MINUS exp
   22    | LPAREN exp_em RPAREN
   23    | ID LPAREN actuals RPAREN
   24    | lvalue ASSIGN exp
   25    | IF exp THEN exp
   26    | IF exp THEN exp ELSE exp
   27    | WHILE exp DO exp
   28    | FOR ID ASSIGN exp TO exp DO exp
   29    | BREAK
   30    | LET decs IN expseq END
   31    | ID LBRACE rec RBRACE
   32    | ID LBRACK exp RBRACK OF exp

   33 lvalue: ID
   34       | oneormore

   35 oneormore: one
   36          | oneormore DOT ID
   37          | oneormore LBRACK exp RBRACK

   38 one: ID DOT ID
   39    | ID LBRACK exp RBRACK

   40 rec: rec_nonempty
   41    | %empty

   42 rec_nonempty: rec_one
   43             | rec_one COMMA rec_nonempty

   44 rec_one: ID EQ exp

   45 sequencing: exp SEMICOLON sequencing_exps

   46 sequencing_exps: exp
   47                | exp SEMICOLON sequencing_exps

   48 actuals: nonemptyactuals
   49        | %empty

   50 nonemptyactuals: exp
   51                | exp COMMA nonemptyactuals

   52 expseq: sequencing_exps
   53       | %empty

   54 decs: decs_nonempty
   55     | %empty

   56 decs_nonempty: decs_nonempty_s
   57              | decs_nonempty_s decs_nonempty

   58 decs_nonempty_s: tydec
   59                | vardec
   60                | fundec

   61 tydec: tydec_one
   62      | tydec_one tydec

   63 tydec_one: TYPE ID EQ ty

   64 ty: ID
   65   | LBRACE tyfields RBRACE
   66   | ARRAY OF ID

   67 tyfields: tyfields_nonempty
   68         | %empty

   69 tyfields_nonempty: ID COLON ID
   70                  | ID COLON ID COMMA tyfields_nonempty

   71 vardec: VAR ID ASSIGN exp
   72       | VAR ID COLON ID ASSIGN exp

   73 fundec: fundec_one
   74       | fundec_one fundec

   75 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   76           | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 23 28 31 32 33 36 38 39 44 63 64 66 69 70 71 72 75 76
STRING (259) 5
INT (260) 4
COMMA (261) 43 51 70
COLON (262) 69 70 72 76
SEMICOLON (263) 45 47
LPAREN (264) 8 22 23 75 76
RPAREN (265) 8 22 23 75 76
LBRACK (266) 32 37 39
RBRACK (267) 32 37 39
LBRACE (268) 31 65
RBRACE (269) 31 65
DOT (270) 36 38
PLUS (271) 9
MINUS (272) 10 21
TIMES (273) 11
DIVIDE (274) 12
EQ (275) 13 44 63 75 76
NEQ (276) 14
LT (277) 15
LE (278) 16
GT (279) 17
GE (280) 18
AND (281) 19
OR (282) 20
ASSIGN (283) 24 28 71 72
ARRAY (284) 66
IF (285) 25 26
THEN (286) 25 26
ELSE (287) 26
WHILE (288) 27
FOR (289) 28
TO (290) 28
DO (291) 27 28
LET (292) 30
IN (293) 30
END (294) 30
OF (295) 32 66
BREAK (296) 29
NIL (297) 7
FUNCTION (298) 75 76
VAR (299) 71 72
TYPE (300) 63
LOWER (301)
LOW (302)
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
exp_em (51)
    on left: 2 3, on right: 1 22
exp (52)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32, on right: 2 9 10 11 12 13 14 15 16
    17 18 19 20 21 24 25 26 27 28 32 37 39 44 45 46 47 50 51 71 72
    75 76
lvalue (53)
    on left: 33 34, on right: 6 24
oneormore (54)
    on left: 35 36 37, on right: 34 36 37
one (55)
    on left: 38 39, on right: 35
rec (56)
    on left: 40 41, on right: 31
rec_nonempty (57)
    on left: 42 43, on right: 40 43
rec_one (58)
    on left: 44, on right: 42 43
sequencing (59)
    on left: 45, on right: 8
sequencing_exps (60)
    on left: 46 47, on right: 45 47 52
actuals (61)
    on left: 48 49, on right: 23
nonemptyactuals (62)
    on left: 50 51, on right: 48 51
expseq (63)
    on left: 52 53, on right: 30
decs (64)
    on left: 54 55, on right: 30
decs_nonempty (65)
    on left: 56 57, on right: 54 57
decs_nonempty_s (66)
    on left: 58 59 60, on right: 56 57
tydec (67)
    on left: 61 62, on right: 58 62
tydec_one (68)
    on left: 63, on right: 61 62
ty (69)
    on left: 64 65 66, on right: 63
tyfields (70)
    on left: 67 68, on right: 65 75 76
tyfields_nonempty (71)
    on left: 69 70, on right: 67 70
vardec (72)
    on left: 71 72, on right: 59
fundec (73)
    on left: 73 74, on right: 60 74
fundec_one (74)
    on left: 75 76, on right: 73 74


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 3 (exp_em)

    program    go to state 12
    exp_em     go to state 13
    exp        go to state 14
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 1

   23 exp: ID . LPAREN actuals RPAREN
   31    | ID . LBRACE rec RBRACE
   32    | ID . LBRACK exp RBRACK OF exp
   33 lvalue: ID .
   38 one: ID . DOT ID
   39    | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 18
    LBRACK  shift, and go to state 19
    LBRACE  shift, and go to state 20
    DOT     shift, and go to state 21

    $default  reduce using rule 33 (lvalue)


State 2

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


State 3

    4 exp: INT .

    $default  reduce using rule 4 (exp)


State 4

    8 exp: LPAREN . sequencing RPAREN
   22    | LPAREN . exp_em RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 3 (exp_em)

    exp_em      go to state 22
    exp         go to state 23
    lvalue      go to state 15
    oneormore   go to state 16
    one         go to state 17
    sequencing  go to state 24


State 5

   21 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 25
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 6

   25 exp: IF . exp THEN exp
   26    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 26
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 7

   27 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 27
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 8

   28 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 28


State 9

   30 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 29
    VAR       shift, and go to state 30
    TYPE      shift, and go to state 31

    $default  reduce using rule 55 (decs)

    decs             go to state 32
    decs_nonempty    go to state 33
    decs_nonempty_s  go to state 34
    tydec            go to state 35
    tydec_one        go to state 36
    vardec           go to state 37
    fundec           go to state 38
    fundec_one       go to state 39


State 10

   29 exp: BREAK .

    $default  reduce using rule 29 (exp)


State 11

    7 exp: NIL .

    $default  reduce using rule 7 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 40


State 13

    1 program: exp_em .

    $default  reduce using rule 1 (program)


State 14

    2 exp_em: exp .
    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 2 (exp_em)


State 15

    6 exp: lvalue .
   24    | lvalue . ASSIGN exp

    ASSIGN  shift, and go to state 53

    $default  reduce using rule 6 (exp)


State 16

   34 lvalue: oneormore .
   36 oneormore: oneormore . DOT ID
   37          | oneormore . LBRACK exp RBRACK

    LBRACK  shift, and go to state 54
    DOT     shift, and go to state 55

    $default  reduce using rule 34 (lvalue)


State 17

   35 oneormore: one .

    $default  reduce using rule 35 (oneormore)


State 18

   23 exp: ID LPAREN . actuals RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 49 (actuals)

    exp              go to state 56
    lvalue           go to state 15
    oneormore        go to state 16
    one              go to state 17
    actuals          go to state 57
    nonemptyactuals  go to state 58


State 19

   32 exp: ID LBRACK . exp RBRACK OF exp
   39 one: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 59
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 20

   31 exp: ID LBRACE . rec RBRACE

    ID  shift, and go to state 60

    $default  reduce using rule 41 (rec)

    rec           go to state 61
    rec_nonempty  go to state 62
    rec_one       go to state 63


State 21

   38 one: ID DOT . ID

    ID  shift, and go to state 64


State 22

   22 exp: LPAREN exp_em . RPAREN

    RPAREN  shift, and go to state 65


State 23

    2 exp_em: exp .
    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   45 sequencing: exp . SEMICOLON sequencing_exps

    SEMICOLON  shift, and go to state 66
    PLUS       shift, and go to state 41
    MINUS      shift, and go to state 42
    TIMES      shift, and go to state 43
    DIVIDE     shift, and go to state 44
    EQ         shift, and go to state 45
    NEQ        shift, and go to state 46
    LT         shift, and go to state 47
    LE         shift, and go to state 48
    GT         shift, and go to state 49
    GE         shift, and go to state 50
    AND        shift, and go to state 51
    OR         shift, and go to state 52

    $default  reduce using rule 2 (exp_em)


State 24

    8 exp: LPAREN sequencing . RPAREN

    RPAREN  shift, and go to state 67


State 25

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   21    | MINUS exp .

    $default  reduce using rule 21 (exp)


State 26

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   25    | IF exp . THEN exp
   26    | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    THEN    shift, and go to state 68


State 27

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   27    | WHILE exp . DO exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    DO      shift, and go to state 69


State 28

   28 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 70


State 29

   75 fundec_one: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   76           | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 71


State 30

   71 vardec: VAR . ID ASSIGN exp
   72       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 72


State 31

   63 tydec_one: TYPE . ID EQ ty

    ID  shift, and go to state 73


State 32

   30 exp: LET decs . IN expseq END

    IN  shift, and go to state 74


State 33

   54 decs: decs_nonempty .

    $default  reduce using rule 54 (decs)


State 34

   56 decs_nonempty: decs_nonempty_s .
   57              | decs_nonempty_s . decs_nonempty

    FUNCTION  shift, and go to state 29
    VAR       shift, and go to state 30
    TYPE      shift, and go to state 31

    $default  reduce using rule 56 (decs_nonempty)

    decs_nonempty    go to state 75
    decs_nonempty_s  go to state 34
    tydec            go to state 35
    tydec_one        go to state 36
    vardec           go to state 37
    fundec           go to state 38
    fundec_one       go to state 39


State 35

   58 decs_nonempty_s: tydec .

    $default  reduce using rule 58 (decs_nonempty_s)


State 36

   61 tydec: tydec_one .
   62      | tydec_one . tydec

    TYPE  shift, and go to state 31

    $default  reduce using rule 61 (tydec)

    tydec      go to state 76
    tydec_one  go to state 36


State 37

   59 decs_nonempty_s: vardec .

    $default  reduce using rule 59 (decs_nonempty_s)


State 38

   60 decs_nonempty_s: fundec .

    $default  reduce using rule 60 (decs_nonempty_s)


State 39

   73 fundec: fundec_one .
   74       | fundec_one . fundec

    FUNCTION  shift, and go to state 29

    $default  reduce using rule 73 (fundec)

    fundec      go to state 77
    fundec_one  go to state 39


State 40

    0 $accept: program $end .

    $default  accept


State 41

    9 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 78
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 42

   10 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 79
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 43

   11 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 80
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 44

   12 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 81
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 45

   13 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 82
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 46

   14 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 83
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 47

   15 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 84
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 48

   16 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 85
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 49

   17 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 86
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 50

   18 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 87
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 51

   19 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 88
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 52

   20 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 89
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 53

   24 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 90
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 54

   37 oneormore: oneormore LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 91
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 55

   36 oneormore: oneormore DOT . ID

    ID  shift, and go to state 92


State 56

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   50 nonemptyactuals: exp .
   51                | exp . COMMA nonemptyactuals

    COMMA   shift, and go to state 93
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 50 (nonemptyactuals)


State 57

   23 exp: ID LPAREN actuals . RPAREN

    RPAREN  shift, and go to state 94


State 58

   48 actuals: nonemptyactuals .

    $default  reduce using rule 48 (actuals)


State 59

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   32    | ID LBRACK exp . RBRACK OF exp
   39 one: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 95
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52


State 60

   44 rec_one: ID . EQ exp

    EQ  shift, and go to state 96


State 61

   31 exp: ID LBRACE rec . RBRACE

    RBRACE  shift, and go to state 97


State 62

   40 rec: rec_nonempty .

    $default  reduce using rule 40 (rec)


State 63

   42 rec_nonempty: rec_one .
   43             | rec_one . COMMA rec_nonempty

    COMMA  shift, and go to state 98

    $default  reduce using rule 42 (rec_nonempty)


State 64

   38 one: ID DOT ID .

    $default  reduce using rule 38 (one)


State 65

   22 exp: LPAREN exp_em RPAREN .

    $default  reduce using rule 22 (exp)


State 66

   45 sequencing: exp SEMICOLON . sequencing_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 99
    lvalue           go to state 15
    oneormore        go to state 16
    one              go to state 17
    sequencing_exps  go to state 100


State 67

    8 exp: LPAREN sequencing RPAREN .

    $default  reduce using rule 8 (exp)


State 68

   25 exp: IF exp THEN . exp
   26    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 101
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 69

   27 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 102
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 70

   28 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 103
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 71

   75 fundec_one: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   76           | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 104


State 72

   71 vardec: VAR ID . ASSIGN exp
   72       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 105
    ASSIGN  shift, and go to state 106


State 73

   63 tydec_one: TYPE ID . EQ ty

    EQ  shift, and go to state 107


State 74

   30 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 53 (expseq)

    exp              go to state 99
    lvalue           go to state 15
    oneormore        go to state 16
    one              go to state 17
    sequencing_exps  go to state 108
    expseq           go to state 109


State 75

   57 decs_nonempty: decs_nonempty_s decs_nonempty .

    $default  reduce using rule 57 (decs_nonempty)


State 76

   62 tydec: tydec_one tydec .

    $default  reduce using rule 62 (tydec)


State 77

   74 fundec: fundec_one fundec .

    $default  reduce using rule 74 (fundec)


State 78

    9 exp: exp . PLUS exp
    9    | exp PLUS exp .
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    $default  reduce using rule 9 (exp)


State 79

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   10    | exp MINUS exp .
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    $default  reduce using rule 10 (exp)


State 80

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   11    | exp TIMES exp .
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    $default  reduce using rule 11 (exp)


State 81

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   12    | exp DIVIDE exp .
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    $default  reduce using rule 12 (exp)


State 82

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   13    | exp EQ exp .
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 13 (exp)


State 83

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   14    | exp NEQ exp .
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


State 84

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   15    | exp LT exp .
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


State 85

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   16    | exp LE exp .
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


State 86

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   17    | exp GT exp .
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


State 87

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   18    | exp GE exp .
   19    | exp . AND exp
   20    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


State 88

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   19    | exp AND exp .
   20    | exp . OR exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 19 (exp)


State 89

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   20    | exp OR exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51

    $default  reduce using rule 20 (exp)


State 90

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   24    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 24 (exp)


State 91

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   37 oneormore: oneormore LBRACK exp . RBRACK

    RBRACK  shift, and go to state 110
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52


State 92

   36 oneormore: oneormore DOT ID .

    $default  reduce using rule 36 (oneormore)


State 93

   51 nonemptyactuals: exp COMMA . nonemptyactuals

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 56
    lvalue           go to state 15
    oneormore        go to state 16
    one              go to state 17
    nonemptyactuals  go to state 111


State 94

   23 exp: ID LPAREN actuals RPAREN .

    $default  reduce using rule 23 (exp)


State 95

   32 exp: ID LBRACK exp RBRACK . OF exp
   39 one: ID LBRACK exp RBRACK .

    OF  shift, and go to state 112

    $default  reduce using rule 39 (one)


State 96

   44 rec_one: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 113
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 97

   31 exp: ID LBRACE rec RBRACE .

    $default  reduce using rule 31 (exp)


State 98

   43 rec_nonempty: rec_one COMMA . rec_nonempty

    ID  shift, and go to state 60

    rec_nonempty  go to state 114
    rec_one       go to state 63


State 99

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   46 sequencing_exps: exp .
   47                | exp . SEMICOLON sequencing_exps

    SEMICOLON  shift, and go to state 115
    PLUS       shift, and go to state 41
    MINUS      shift, and go to state 42
    TIMES      shift, and go to state 43
    DIVIDE     shift, and go to state 44
    EQ         shift, and go to state 45
    NEQ        shift, and go to state 46
    LT         shift, and go to state 47
    LE         shift, and go to state 48
    GT         shift, and go to state 49
    GE         shift, and go to state 50
    AND        shift, and go to state 51
    OR         shift, and go to state 52

    $default  reduce using rule 46 (sequencing_exps)


State 100

   45 sequencing: exp SEMICOLON sequencing_exps .

    $default  reduce using rule 45 (sequencing)


State 101

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   25    | IF exp THEN exp .
   26    | IF exp THEN exp . ELSE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    ELSE    shift, and go to state 116

    $default  reduce using rule 25 (exp)


State 102

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   27    | WHILE exp DO exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 27 (exp)


State 103

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   28    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    TO      shift, and go to state 117


State 104

   75 fundec_one: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   76           | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 118

    $default  reduce using rule 68 (tyfields)

    tyfields           go to state 119
    tyfields_nonempty  go to state 120


State 105

   72 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 121


State 106

   71 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 122
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 107

   63 tydec_one: TYPE ID EQ . ty

    ID      shift, and go to state 123
    LBRACE  shift, and go to state 124
    ARRAY   shift, and go to state 125

    ty  go to state 126


State 108

   52 expseq: sequencing_exps .

    $default  reduce using rule 52 (expseq)


State 109

   30 exp: LET decs IN expseq . END

    END  shift, and go to state 127


State 110

   37 oneormore: oneormore LBRACK exp RBRACK .

    $default  reduce using rule 37 (oneormore)


State 111

   51 nonemptyactuals: exp COMMA nonemptyactuals .

    $default  reduce using rule 51 (nonemptyactuals)


State 112

   32 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 128
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 113

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   44 rec_one: ID EQ exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 44 (rec_one)


State 114

   43 rec_nonempty: rec_one COMMA rec_nonempty .

    $default  reduce using rule 43 (rec_nonempty)


State 115

   47 sequencing_exps: exp SEMICOLON . sequencing_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 99
    lvalue           go to state 15
    oneormore        go to state 16
    one              go to state 17
    sequencing_exps  go to state 129


State 116

   26 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 130
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 117

   28 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 131
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 118

   69 tyfields_nonempty: ID . COLON ID
   70                  | ID . COLON ID COMMA tyfields_nonempty

    COLON  shift, and go to state 132


State 119

   75 fundec_one: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   76           | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 133


State 120

   67 tyfields: tyfields_nonempty .

    $default  reduce using rule 67 (tyfields)


State 121

   72 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 134


State 122

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   71 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 71 (vardec)


State 123

   64 ty: ID .

    $default  reduce using rule 64 (ty)


State 124

   65 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 118

    $default  reduce using rule 68 (tyfields)

    tyfields           go to state 135
    tyfields_nonempty  go to state 120


State 125

   66 ty: ARRAY . OF ID

    OF  shift, and go to state 136


State 126

   63 tydec_one: TYPE ID EQ ty .

    $default  reduce using rule 63 (tydec_one)


State 127

   30 exp: LET decs IN expseq END .

    $default  reduce using rule 30 (exp)


State 128

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   32    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 32 (exp)


State 129

   47 sequencing_exps: exp SEMICOLON sequencing_exps .

    $default  reduce using rule 47 (sequencing_exps)


State 130

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   26    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 26 (exp)


State 131

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   28    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    DO      shift, and go to state 137


State 132

   69 tyfields_nonempty: ID COLON . ID
   70                  | ID COLON . ID COMMA tyfields_nonempty

    ID  shift, and go to state 138


State 133

   75 fundec_one: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   76           | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 139
    EQ     shift, and go to state 140


State 134

   72 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 141
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 135

   65 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 142


State 136

   66 ty: ARRAY OF . ID

    ID  shift, and go to state 143


State 137

   28 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 144
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 138

   69 tyfields_nonempty: ID COLON ID .
   70                  | ID COLON ID . COMMA tyfields_nonempty

    COMMA  shift, and go to state 145

    $default  reduce using rule 69 (tyfields_nonempty)


State 139

   76 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 146


State 140

   75 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 147
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 141

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   72 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 72 (vardec)


State 142

   65 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 65 (ty)


State 143

   66 ty: ARRAY OF ID .

    $default  reduce using rule 66 (ty)


State 144

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   28    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 28 (exp)


State 145

   70 tyfields_nonempty: ID COLON ID COMMA . tyfields_nonempty

    ID  shift, and go to state 118

    tyfields_nonempty  go to state 148


State 146

   76 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 149


State 147

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   75 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 75 (fundec_one)


State 148

   70 tyfields_nonempty: ID COLON ID COMMA tyfields_nonempty .

    $default  reduce using rule 70 (tyfields_nonempty)


State 149

   76 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 150
    lvalue     go to state 15
    oneormore  go to state 16
    one        go to state 17


State 150

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   19    | exp . AND exp
   20    | exp . OR exp
   76 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 76 (fundec_one)
